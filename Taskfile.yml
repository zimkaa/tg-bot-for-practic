version: "3"

# dotenv: ['.env', '{{.ENV}}/.env.', '{{.HOME}}/.env']

tasks:
  default:
    - task: help

  help:
    desc: "List all tasks"
    silent: true
    cmds:
      - task --list-all

  generate-pre-commit-config:
    desc: "Generate .pre-commit-config.yaml file from .pre-commit-config.yaml.template"
    silent: true
    precondition: test -f .pre-commit-config.yaml.template
    generates:
      - .pre-commit-config.yaml
    env:
      PRE_COMMIT_ADDITIONAL_DEPENDENCIES:
        sh: echo "$(poetry export --with dev --without-hashes | while read line; do echo "          - $(echo ${line} | sed "s/^[ \t]*//")"; done)"
    cmds:
      - envsubst < .pre-commit-config.yaml.template > .pre-commit-config.yaml
      - echo "The .pre-commit-config.yaml file has been generated."

  update-pre-commit-config:
    desc: "Update versions .pre-commit-config.yaml"
    cmds:
      - pre-commit autoupdate

  lint:
    desc: "Run pre-commit run --all-files"
    precondition: test -f .pre-commit-config.yaml
    cmds:
      - pre-commit run --all-files

  run-local-test-bot:
    desc: Run telegram bot locally
    cmds:
      - python -m bot

  build-docker-bot:
    desc: "Build docker container telegram bot and run Example: task build-docker-bot -- '-p'"
    env:
      APP_VERSION:
        sh: export VERSION="$(poetry version | awk '{print $2}')" && python ./version_build/build.py {{.CLI_ARGS}}
    cmds:
      - sed -i "0,/RE/s/^APP_VERSION=.*/APP_VERSION=${APP_VERSION}/" .env >> .env
      - docker compose -f compose-dev.yaml up -d --build

  build-docker-bot-without-run:
    desc: "Build docker container telegram bot Example: task build-docker-bot -- '-p'"
    env:
      APP_VERSION:
        sh: export VERSION="$(poetry version | awk '{print $2}')" && python ./version_build/build.py {{.CLI_ARGS}}
    cmds:
      - sed -i "0,/RE/s/^APP_VERSION=.*/APP_VERSION=${APP_VERSION}/" .env >> .env
      - docker compose -f compose-dev.yaml create --build

  push-docker-container:
    desc: "Push docker container to docker hub"
    cmds:
      - docker image push --all-tags zimkaa/sales_bot

  run-docker-bot:
    desc: Run docker container telegram bot
    cmds:
      - docker compose -f compose-dev.yaml up -d

  stop-docker-bot:
    desc: Stop docker container telegram bot
    cmds:
      - docker compose -f compose-dev.yaml down && docker network prune --force

  test:
    desc: Run tests
    cmds:
      - python -m coverage run
      - python -m coverage report -m
      - python -m coverage html

  file-id-bot:
    desc: Run file_id sender locally
    cmds:
      - python ./get_file_id_for_bot.py

  user-id-bot:
    desc: Run user id sender locally
    cmds:
      - python ./get_user_id.py
